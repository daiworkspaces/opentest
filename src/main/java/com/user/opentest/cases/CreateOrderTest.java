package com.user.opentest.cases;


import com.google.gson.JsonObject;
import com.user.opentest.config.TestConfig;
import com.user.opentest.model.CreateOrderCase;
import com.user.opentest.utils.DataBaseUtil;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.apache.ibatis.session.SqlSession;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import java.io.IOException;
import java.util.Locale;
import java.util.ResourceBundle;

public class CreateOrderTest {



    @BeforeTest
    public void beforeTest(){
        TestConfig.bundle = ResourceBundle.getBundle("application", Locale.CANADA);
        TestConfig.testUrl  =TestConfig.bundle.getString("host.uri");
        TestConfig.httpClient = HttpClients.createDefault();
    }

    @Test(groups = "createOrder",description = "创建订单加密接口测试")
    public void createOrder() throws IOException {
        SqlSession sqlSession = DataBaseUtil.getSqlSession();
        CreateOrderCase createOrderCase = sqlSession.selectOne("createOrder",1);
        System.out.println(createOrderCase.toString());

        System.out.println("111111111111111111111111");


        //发送请求，获取结果
       String result = getSult(createOrderCase);
        System.out.println(result.toString());

        //验证返回结果




    }

    private String getSult(CreateOrderCase createOrderCase) throws IOException {
        String url = createOrderCase+createOrderCase.getEncryption_path();
        System.out.println("============="+url+"接口请求地址");
        HttpPost post = new HttpPost(url);

//        List<NameValuePair> paras = new ArrayList<>();
//        paras.add(new BasicNameValuePair("licenseId", createOrderCase.getLicenseId()));
//        paras.add(new BasicNameValuePair("dataJson", createOrderCase.getDataJson()));
        JsonObject jsonObject = new JsonObject();
        jsonObject.addProperty("licenseId",createOrderCase.getLicenseId());
        jsonObject.addProperty("dataJson",createOrderCase.getDataJson());



        post.setHeader("Content-type","application/json");
        post.setEntity(new StringEntity(jsonObject.toString()));
        System.out.println(createOrderCase.getDataJson());


        String result;
        CloseableHttpResponse response = TestConfig.httpClient.execute(post);
        result = EntityUtils.toString(response.getEntity(),"UTF-8");

        return  result;



    }


}
